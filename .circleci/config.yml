version: 2

terraform: &terraform
  docker:
    - image: hashicorp/terraform:0.12.8
  working_directory: /tmp/workspace/terraform

attach_workspace: &attach_workspace
  attach_workspace:
    at: /tmp/workspace/terraform

curl: &curl
  run:
    name: Install curl
    command: apk add --update-cache --upgrade curl

jobs:
  validate:
    <<: *terraform
    environment:
        AWS_DEFAULT_REGION: us-east-1
        TF_IN_AUTOMATION: true
    steps:
      - checkout
      - *curl
      - run:
          name: terraform init
          command: find . -type f -name "*.tf" -exec dirname {} \;|sort -u | while read m; do (cd "$m" && terraform init -input=false -backend=false) || exit 1; done
      - run:
          name: Validate Terraform configurations
          command: find . -name ".terraform" -prune -o -type f -name "*.tf" -exec dirname {} \;|sort -u | while read m; do (cd "$m" && terraform validate && echo "âˆš $m") || exit 1 ; done
      - run:
          name: Check if Terraform configurations are properly formatted
          command: if [[ -n "$(terraform fmt -write=false)" ]]; then echo "Some terraform files need be formatted, run 'terraform fmt' to fix"; exit 1; fi
      - run:
          name: Install tflint
          command: curl -L -o /tmp/tflint.zip https://github.com/wata727/tflint/releases/download/v0.8.2/tflint_linux_amd64.zip && unzip /tmp/tflint.zip -d /usr/local/bin
      - run:
          name: Check Terraform configurations with tflint
          command: tflint
      - persist_to_workspace:
          root: /tmp/workspace/terraform
          paths: 
            - "examples/*/.terraform"
            - "examples/*/*.zip"          
  test_plan:
    <<: *terraform
    environment:
        AWS_DEFAULT_REGION: us-east-1
        TF_IN_AUTOMATION: true
        AWS_PROFILE: scilonax_sandbox
    steps:
      - checkout
      - *attach_workspace
      - *curl
      - run:
          name: aws credentials
          command: mkdir -p ~/.aws/credentials && echo $credentials > ~/.aws/credentials
      - run:
          name: terraform init
          command: find . -type d -name ".terraform" -exec dirname {} \;|sort -u | while read m; do (cd "$m" && terraform init -input=false) || exit 1; done
      - run:
          name: terraform plan
          command: find . -type d -name ".terraform" -exec dirname {} \;|sort -u | while read m; do (cd "$m" && terraform plan -input=false) || exit 1; done          
  apply:
    <<: *terraform
    environment:
        AWS_DEFAULT_REGION: us-east-1
        TF_IN_AUTOMATION: true
        AWS_PROFILE: scilonax_sandbox
    steps:
      - checkout
      - *attach_workspace
      - *curl
      - run:
          name: terraform init
          command: find . -type d -name ".terraform" -exec dirname {} \;|sort -u | while read m; do (cd "$m" && terraform init -input=false) || exit 1; done
      - deploy:
          name: terraform apply
          command: find . -type d -name ".terraform" -exec dirname {} \;|sort -u | while read m; do (cd "$m" && terraform apply -input=false -auto-approve) || exit 1; done
workflows:
  version: 2
  build:
    jobs:
      - validate
      - test_plan:
          context: sandbox
          requires:
            - validate
          filters:
            branches:
              ignore: master
      - apply:
          context: sandbox
          requires:
            - validate
          filters:
            branches:
              only: master
